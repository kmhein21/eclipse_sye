---
title: "Analyzing Audio Patterns During the 2024 Total Solar Eclipse"
author:
  - name: "Kaitlin Heintzman"
  - name: "Advisor: Matt Higham"
institute: "St. Lawrence University"
number-sections: true
date: "4/30/25"
format:
   pdf:
     toc: true
     embed-resources: true
     include-in-header:
         text: |
           \usepackage{lipsum}
           \usepackage{setspace}
           \onehalfspacing
           \linespread{2}
#format:
#  html:
#    embed-resources: true
#    toc: true
---

\newpage


```{r}
#| label: setup
#| include: false
##| eval: true
#| eval: false

chunk_hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
  x <- chunk_hook(x, options)
  paste0("\\linespread{0.9}\n", x, "\n\n\\linespread{2}")
})
```


```{r}
#| echo: false 
#| warning: false

library(tidyverse)
library(soundecology)
library(here)
library(hms)
library(tuneR)
library(pander)
library(mgcv)
library(modelr)
```
 
\newpage

# Abstract

From March 30 to April 16th, Erika Barthelmess and students from the St. Lawrence biology department collected data from 20 audio recording devices in the Northern New York area. These devices were strategically located to observe potential audiological changes in wildlife at the time of the total solar eclipse on April 8th, 2024. We processed this audio data to produce organized data frames, centered around 5 commonly used bioacoustic indices. From this tabular data, we constructed many visualizations displaying patterns across time, day, and recording device. Due to the non-linearity present in our plots, generalized additive models based on date, time of day, and recording device were implemented to assess patterns that may have occurred during the time of the eclipse. From these visuals and models, we conclude the possibility that 3 of our 5 indices are associated with audio changes during the time of the eclipse. 


# Data Collection Methods

This protocol was written and carried out by Erika Barthelmess and other biology students at St. Lawrence university. 

We collected data between March 30 and April 16, 2024 by deploying 20 AudioMothTM acoustic recorders throughout St. Lawrence County, New York. All locations were fully within the path of totality for the April 8, 2024 total solar eclipse. The partial eclipse began at 14:11:38, totality began at 15:23:52, maximum eclipse was at 15:25:29, totality ended at 15:27:05 and the partial eclipse ended at 16:35:38 (all times local, times from https://www.timeanddate.com/eclipse/in/@5111484?iso=20240408) for a total eclipse duration of 2 hours 24 minutes with totality lasting 3 minutes and 13 seconds.

Each AudioMoth was configured to record within four temporal windows on each day of the deployment. The first window was from 05:45 – 07:15 (approximately 30 minutes before to 45 minutes after sunrise), the second from 14:00 to 16:50 (capturing the full period of time each day corresponding to the eclipse on April 8), third from 19:00 to 20:00 (approximately 30 minutes before and after sunset) and the last from 23:00 to 23:30 (to sample nocturnal sounds). (Table 1.)

| Times         | Reasoning                                        |
|---------------|--------------------------------------------------|
| 5:45 - 7:15   | 30-45 minutes before sunrise                     |
| 14:00 - 16:00 | full period of time corresponding to the eclipse |
| 19:00 - 20:00 | \~30 minutes before and after sunset             |
| 23:00 - 23:30 | sample nocturnal activity                        |

: Recording Times {.striped .hover}

Within each time window, each AudioMoth recorded in a repeated cycle with 55 seconds of recording and 5 seconds to write data for every minute of the recording window (Table 2). Sample rate measures the density of recordings per unit time and therefore the range of frequencies that can be recorded. High sample rates record a higher range of frequencies but take up more space on the microSD card. We selected a sample rate of 96 kHz to capture sound frequencies up to about 48 kHz, which allowed us to capture common bird and amphibian songs and calls as well as at least some insects and bat echolocation sounds. Gain is a measure of the degree to which the microphone amplifies the sound as it is recorded. Higher gain enables detection of quieter sounds but can also result in clipping and distortion. After collecting pilot recordings near wetlands where wood frogs were calling we determined that a gain setting of 4 would help increase our detection of animal sounds.

| Parameters         | Setting                                        |
|---------------|--------------------------------------------------|
| Sample rate (kHz)  | 96                    |
| Gain | Relatively high (4 on a 5 point scale) |
| Sleep Duration (seconds) | 5             |
| Recording Duration (seconds) | 55                     |

: Recording Parameters {.striped .hover}

We used ArcGIS Pro (version XXXX, ESRI Incorporated, Redlands, California) to identify areas of forest-wetland interface or forested wetland occurring on public or University-owned land. Our intention was to place the recorders at locations where they could capture the sounds of both forest birds and pond-breeding amphibians (as well as other biotic sounds including any active insects or bats). Due to our northern location within the path of the eclipse in North America, the onset of spring was just beginning. Red-winged blackbirds (*Agelaius phoeniceus*) had returned to the area and were establishing breeding territories and both wood frogs (*Lithobates sylvaticus*) and spring peepers (*Pseudacris crucifer*) had begun to chorus at least 5 days prior to deployment of the recorders. To reduce the time required to deploy units, we located the devices near but out of view of hiking trails and within 20 miles of the St. Lawrence University campus (44.58931027483651º N, -75.1613716006626 º W).

A large inspiration for this study and the protocol that we followed was due to a paper published in 2017 by Jacob E. Gerber, Dakota Howard, and John E. Quinn. 

# Indices and Packages

The analysis of this data uses many packages included "Tidyverse", "hms", "soundecology", "here", "pandr", "mgcv", "modelr" and "tuneR"

Using the $'soundecology'$ package we selected 5 specific indices of interest that we believed would be important in understanding the changes in acoustic activity. Due to the recording devices all data was subsetting from the left channel as the right channel values were not available. 

## Acoustic Complexity Index:

This index focuses on understanding the spatial and temporal complexity of sound. It does so by numerically portraying the variation in sound signal over a time frame (the audio file). This index will reflect intensity and frequency shifts in an environment.

A higher ACI value indicates a more diversity soundscape compared to a lower value (could indicate more monotone and stable sounds).

In the Gerber et. al paper in 2017, this index was not found to be significant in their model but it was apparent that ACI was greatest during totality.

This index is obtained using the acoustic_complexity() function within the soundecology package. The specific numerical values used are from subsetting \$acl_left_vals.

## Acoustic Diverstiy Index:

The Acoustic Diversity Index (ADI) assesses both the variety and evenness in the sound distribution across different bands. It does so by generating proportions of data within a specific interval that reach above a specified threshold (default -50dBFS).

Similar to ACI, a higher ADI value corresponds to a increase in diversity within a habitat and a low ADI refers to a less biodiverse location.

In the Gerber et. al paper in 2017, this index was not found to be significant in their model but it was apparent that ADI was highest at the times right before and after the eclipse.

This index is obtained using the acoustic_diversity() function in the soundecology package. The specific numerical values used are from subsetting \$left_band_values.

For both the Acoustic Diversity index and the Acoustic Complexity index multiple values are stored per .WAV audio file, in this analysis the list of values were often summed to produce the total ACI/ADI value which helped visualization and corresponded to the full audiofile. 

## Acoustic Evenness Index:

The Acoustic Evenness Index (AEI) measures how even the distribution of sound is across different frequency bands. It does so by assessing the equality and inequality of sound power distribution in different ranges by calculating the Gini index over segmented portions of an audiofile. This index does not separate anthropogenic and biological sound. 

To understand interpretation, a high AEI value signifies a more even soundscape, within the audio there isn't any sound domination from one type of sound/species. A low AEI signifies that the sound is not as even, there may only be a few loud or similar sounds which disrupt the consistency of the sound level.

In the paper by Gerber et. al in 2017, this was found to be a statistically significant predictor in their model. There they found that the AEI was highest right before the eclipse began and it rose until period of totality. (Gerber attributes this likely to the increase in human sounds near their recording locations)

This index is found using the acoustic_evenness() function in the soundecology package. The specific numerical value used is from subsetting \$aei_left.

## Bioacoustic Index:

The Bioacoustic Index (BEI) provides a measurement of the diversity and abundance of biological noise. This index is calculated in comparison to the period with the lowest sound, providing a look into the change in relation to levels of sound within the audiofile. 

Interpreation of this index can be understood as higher values signal higher sound disparities within the file, and vice versa for lower values. 

Within the Gerber et. al paper (2017), this was found to be a non-significant predictor but it seemed to be greatest at the period of totality. 

This is obtained using the bioacoustic_index() function in the soundecology package. The specific numerical value used is from subsetting \$left_area. In this function a minimum hertz value is set, and for this analysis we used the default of 2000 Hertz. 

## Biophony:

Biophony is an index which calculates the average frequency of biotic sound. This index is much more straightforward as high biophony means that there is more sound and low values mean less.

Within the Gerber et. al paper in 2017, the biophony was found to increase at the beginning and end of the eclipse, akin to the dawn/dusk choruses. In this paper biophony was a significant predictor in their model. 

This index is obtained as a byproduct from the ndsi() function and the numerical values used is from subsetting \$biophony_left.

# Initial visualization 

Due to the large amount of recordings at our disposal we began creating graphics using a subset of 5 audio files (.WAV) from a single Audiomoth to explore the possibilities of the graphics and the best ways to display the indices, while not wasting computation time.

```{r}
#| echo: false 
WAV_5_test <-readRDS(here("WAV_5_test.rds"))
```

```{r}
#| echo: false

WAV_5_test|>
  mutate(ACI_all = sapply(ACI_all, function(x) paste(head(x,2), collapse = ",")))|>
  mutate(ADI_all = sapply(ADI_all, function(x) paste(head(x,2), collapse = ",")))|>
  select(-day, -hour, -folder_name)|>
  pander("First 5 Index values calculated")
```

```{r}
#| echo: false
#| fig-align: center

ggplot(data=WAV_5_test, aes(x=time, y=as.numeric(bei)))+
  geom_point(col="red")+
  theme_minimal()+
  labs(x = "Time", y = "BEI", title = "First Graphic of Bioacoustic Index")

```


```{r}
#| echo: false
#| fig-align: center

ggplot(data = WAV_5_test, aes(x = time, y = sapply(ADI_all, sum)))+
  geom_point(col = "blue")+
  theme_minimal()+
  labs(x = "Time", y = "ADI", title = "First Graphic of Acoustic Diversity")
```

These example plots show the initial visualization that was done for each of these indices. To save space we have included only the Bioacoustic index and Acoustic Diversity plots. Although these initial visualizations did not help us assess patterns, the graphics helped us gain an understanding of the ranges that we could expect these values to fall in. 


| Index         | Range                                        |
|---------------|--------------------------------------------------|
| Acoustic Complexity | 1600 - 1700                |
| Acoustic Diversity | 0 - 10  |
| Acoustic Evenness | 0 - 0.5         |
| Bioacoustic Index | 0 - 1.5                    |
| Biophony| 1 - 3 |

: Assessment of Index Ranges {.striped .hover}


## Creating a cleaned data frame

To expand the collection of data that we could visualize it was best to generalize our code and create a function, "eclipse_df()" which would use a folder containing all .WAV files for one audiomoth as an input and then would return a cleaned data frame. This data frame would then be saved in our environment and would contain all the data that we would need from this point forward.  

Initially indexes are formed for all the WAV files and stored in their own data frames. For the Bioacoustic index, Acoustic eveness index, and biophony all values are subsetted from the original output of the soundecology function. These three indices are then bound into one tibble. 

```{r}
#| eval: false
BEI<-as.data.frame(BEI_ALL)|>
  select(starts_with("left_area"))|>
  pivot_longer(everything(), names_to= "bei_name", values_to = "BEI")
```

For the Acoustic Complexity and the Acoustic diversity to obtain the full list of values for each folder a for loop is incorporated into the function. This obtains all the left channel values and combines them into a list.

```{r}
#| eval: false

ACI_all<-vector("list", length(c(1:n)))
ADI_all<-vector("list", length(c(1:n)))

for (i in 1:n){
    ACI_all[i]<-(as.data.frame(ACI[[i]]$aci_fl_left_vals))
    ADI_all[i]<-(as.data.frame(ADI[[i]]$left_band_values))
} 
```

After they have been calculated the data frames are  bound together into one. The code listed below is for the final data frame which creates all our indices, date/time information, and the name of the folder that the data corresponds to. 

```{r}
#| eval: false
full|> mutate(biophony = as.numeric(biophony),
                        aei = as.numeric(aei),
                        bei = as.numeric(bei))|>
    separate(paths_date, into = c("date","time_hms"), sep = "_")|>
    separate(time_hms, into = c("time", "wav"), sep = "\\.")|>
    separate(time, into = c("hours", "other"), sep = 2)|>
    separate(other, into = c("min", "sec"), sep = 2)|>
    mutate(date = parse_number(date))|>
    unite("time", c("date", "hours", "min", "sec"), sep = ":")|>
    mutate(time= ymd_hms(time))|>
    select(-wav)|>
    mutate(folder_name = deparse(str_remove(folder, here())))|>
    select(folder_name, everything())
```

Initially we tested this function on two folders which are a part of the larger collection of data from the audiomoth A004_SD012. These two folders correspond to April 7th and 8th. Graphs from the indexes across the four different recording times are shown below

```{r}
#| echo: false 
#saveRDS(New_df_4_7, file = "A004_SD012_04_07.rds" )
#saveRDS(New_df_4_8, file = "A004_SD012_04_08.rds" )
New_df_4_7 <- readRDS(here("Old_rda_csv/A004_SD012_04_07.rds"))
New_df_4_8 <- readRDS(here("Old_rda_csv/A004_SD012_04_08.rds"))
```

```{r}
#| echo: false
both_days <- bind_rows(New_df_4_7, New_df_4_8) |>
  mutate(day = as.factor(day(time)),
         only_time = as_hms(time))

dawn<- both_days|> filter(only_time >= as_hms("05:45:00") & only_time <= as_hms("07:15:00"))
eclipse<- both_days|> filter(only_time >= as_hms("14:00:00") & only_time <= as_hms("16:00:00"))
afternoon<- both_days|> filter(only_time >= as_hms("19:00:00") & only_time <= as_hms("21:00:00"))
night<- both_days|> filter(only_time >= as_hms("23:00:00") & only_time <= as_hms("23:30:00"))
```

```{r}
#| echo: false

ggplot(data = dawn, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line()+
  geom_line(data = eclipse, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = afternoon, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = night, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  scale_color_viridis_d()+
  theme_minimal()+
  guides(color = guide_legend("Day"))+
  labs(title = "Biophony", x = "Time")


ggplot(data = dawn, aes(x = only_time, y = AEI, color = as.factor(date(time))))+
  geom_line()+
  geom_line(data = eclipse, aes(x = only_time, y = AEI, color = as.factor(date(time))))+
  geom_line(data = afternoon, aes(x = only_time, y = AEI, color = as.factor(date(time))))+
  geom_line(data = night, aes(x = only_time, y = AEI, color = as.factor(date(time))))+
  scale_color_viridis_d()+
  theme_minimal()+
  guides(color = guide_legend("Day"))+
  labs(title = "Biophony", x = "Time")

ggplot(data = dawn, aes(x = only_time, y = BEI, color = as.factor(date(time))))+
  geom_line()+
  geom_line(data = eclipse, aes(x = only_time, y = BEI, color = as.factor(date(time))))+
  geom_line(data = afternoon, aes(x = only_time, y = BEI, color = as.factor(date(time))))+
  geom_line(data = night, aes(x = only_time, y = BEI, color = as.factor(date(time))))+
  scale_color_viridis_d()+
  theme_minimal()+
  guides(color = guide_legend("Day"))+
  labs(title = "Biophony", x = "Time")

ggplot(data = dawn, aes(x = only_time, y = sapply(ADI, sum), color = as.factor(date(time))))+
  geom_line()+
  geom_line(data = eclipse, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = afternoon, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = night, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  scale_color_viridis_d()+
  theme_minimal()+
  guides(color = guide_legend("Day"))+
  labs(title = "Biophony", x = "Time")


ggplot(data = dawn, aes(x = only_time, y = sapply(ACI, sum), color = as.factor(date(time))))+
  geom_line()+
  geom_line(data = eclipse, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = afternoon, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  geom_line(data = night, aes(x = only_time, y = Biophony, color = as.factor(date(time))))+
  scale_color_viridis_d()+
  theme_minimal()+
  guides(color = guide_legend("Day"))+
  labs(title = "Biophony", x = "Time")
```


Visualizing these two data sets help us understand the patterns that occur across a full day of recording as well, and a pattern we can see that across the day we can see that ADI, ACI, and biophony are higher during the dawn segment and then decrease to similar low levels across the rest of the day. Another thing these graphs can shed light on are the potential differences between a normal day and the day of the elipse. in these graphs we can see some differences between the indices, but as this is just a comparison from two folders we can't assume this is a result of the eclipse. 

## Using the HPC

To assist in efficiently expanding to the full set of our audio files, we decided to utilize the HPC to run our function on the large files for each audiomoth and to extract the cleaned data. This would assist in speeding up the computation time, and decreasing the amount of space utilized by WAV files on a desktop.  To avoid any chance of overwriting through this process, the function created a final output of an RDS file, so that it could be renamed as the audiomoth name upon loading into the environment. We ran, visualized, and analyzed all of the data collected by the biology department, which ended up belonging to 20 audiomoths. Each audiomoth was processed through our function eclipse_df, and on average the task took ~ 10.5 hours. 

Through using the HPC it was discovered that some of the audiomoth folders contained empty .WAV files which would kill the HPC job before the RDS was finished and saved. To combat this any folder which contained empty .WAV files, small .WAV files (<1 MB ), and alternate file types were deleted from the folder before running on the HPC. As this was only about ~5-8 files this did not cause concern about missing data or unequal RDS file sizes. 

## Analyzing one full file from an audiomoth

We began by running one folder corresponding to the first audiomoth (A001_SD001) on the HPC to assess the efficiency of our function, understand how the HPC would work, and begin our visualization of the full recording time. To analyze these full files we decided to focus on looking for patterns across the days that the audiomoths were recording. We wanted to see if the eclipse data looked different from the other days when sampling occurred and if the time during the eclipse was similar to the dawn. 

```{r}
#| echo: false
A001_SD001<-readRDS(here("rds_files/A001_SD001.rds"))

eclipse_start<-hms(00,00,14)
eclipse_end<-hms(00,50,16)

eclipse_time<-A001_SD001|> filter(hour>= eclipse_start & hour<= eclipse_end)
eclipseonly<-A001_SD001|> filter(hour>= eclipse_start & hour<= eclipse_end)|> filter(day == "2024-04-08")

dawn<- A001_SD001|> filter(hour >= as_hms("05:45:00") & hour <= as_hms("07:15:00"))
eclipse<- A001_SD001|> filter(hour >= as_hms("14:00:00") & hour <= as_hms("16:00:00"))
afternoon<- A001_SD001|> filter(hour >= as_hms("19:00:00") & hour <= as_hms("21:00:00"))
night<- A001_SD001|> filter(hour >= as_hms("23:00:00") & hour <= as_hms("23:30:00"))
```

Through analyzing the first folder and indices returned from one audiomoth (A001_SD001), we analyzed both the full time series and the time segment that corresponded to the eclipse. To display the patterns from different days we created faceted graphs. Through analyzing the full series, it seemed that day to day the indices fluctuated, and that there wasn't a specific difference between April 8th daily pattern and the other days. 

```{r}
#| echo: false

ggplot(data = dawn, aes( x = hour, y = bei))+
  geom_line()+
  geom_line(data = eclipse, aes(x = hour, y = bei))+
  geom_line(data = afternoon, aes(x = hour, y = bei))+
  geom_line(data = night, aes(x = hour, y = bei))+
  theme_minimal()+
  facet_wrap(~day)+
  labs( title = "Example of Full Patterns - Bioacoustic Evenness")+
  scale_x_continuous(name = "Hour", breaks = c(hms(00,45,5), hms(00,00,14), hms(00,00, 19),hms(00,00,23)))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))
  
```

To look for more variations, we subsetted the portion of the day that corresponded to time of the eclipse and changed the color of the line corresponding to April 8th. In doing this we could see more variation and found an interesting pattern by looking at biophony.

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = biophony, group = day))+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = biophony), col = "blue", lwd = 1)+
  theme_minimal()+
  labs(title = "Biophony over Eclipse Duration")
```

Looking at the graph above we can see a decrease in the overall biological noise around the middle portion of the graph which would be during the time of the eclipse. The shaded portion during this increase shows that this decrease is not common to the time of day, and it is clear by looking at the rest of the daily pattern this varies. 

```{r}
ggplot(data = eclipse_time, aes(x = hour, y = biophony, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.3)+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = biophony), col = "blue", lwd = 1)+
  theme_minimal()+
  labs(title = "Biophony over Eclipse Duration")
```

To further understand why this pattern could be arising we added a rectangle corresponding to the time of totality (15:27:05 to 15:23:52). Once this is added we can see that this strong decrease occurs around the exact time totality begins. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = biophony))+
  geom_line()+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.3)+
  facet_wrap(~day)+
  theme_minimal()+
  labs(title = "Biophony over the Eclipse Duration")+
  scale_x_continuous(name = "Hour", breaks = c(eclipse_start, hms(00,00,15), hms(00,00,16), eclipse_end))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))
```

Creating this similar graph across all of the days we can see that this stark decrease in sound is not common and does not seem to occur in any day at this time, other than on April 8th. Although this is not a statistical conclusion, it is an interesting pattern worthy of notice. 

We preformed the same type of visualization across the other indices, however if there didn't seem to be any interesting patterns a faceted graph across all the days will not be included here. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = aei, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "green", alpha = 0.3)+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = aei), col = "blue", lwd =1)+
  theme_minimal()+
  labs(title = "Acoustic evenness over the Eclipse Duration")

```

In acoustic evenness this pattern is not as pronounced but there is an increase of AEI during the time of totality. Throughout this day we can see that this is the highest the AEI value gets, but comparitively to the other days it doesn't seem to stick out. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = bei, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "green", alpha = 0.3)+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = bei), col = "blue", lwd =1)+
  theme_minimal()+
  labs(title = "Bioacoustic Index over the Duration of the Eclipse")

```

In this graph we see another striking pattern, the BEI increasing significantly at the beginning of totality compared to the rest of this period. We can also see there are not a lot of days which have this high BEI at this time, or during this period of day. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = bei))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.3)+
  geom_line()+
  facet_wrap(~day)+
  theme_minimal()+
  labs(title = "Bioacoustic Index over the Eclipse Duration")+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))
```

Faceting the graph we can get a better look at the patterns occurring at the times corresponding to totality on April 8th. From this we can see that this stark increase is not common across the other days, with the only other day where this pattern looks similar is on April 1st. Besides this one occurance, this pattern does not appear in any other day, and even on April 1st it is not as severe as the day of the eclipse. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = sapply(ACI_all, sum), group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3000, fill = "green", alpha = 0.3)+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = sapply(ACI_all,sum)), col = "blue", lwd =1)+
  theme_minimal()+
  labs(title = "Acoustic Complexity over the Duration of the Eclipse", y = "ACI")
```

For the ACI there seems to be the potentially for an interesting pattern, however we created a faceted graph we can see that the ACI is often at this 1600 level and is actually quite common across all the days. 

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = sapply(ACI_all, sum)))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3000, fill = "lightblue", alpha = 0.3)+
  geom_line()+
  facet_wrap(~day)+
  theme_minimal()+
  labs(title = "Acoustic Complexity Index over the Eclipse Duration", y = "ACI")+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))
```

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = sapply(ADI_all, sum), group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 12, fill = "green", alpha = 0.3)+
  geom_line(alpha = 0.3)+
  geom_line(data = eclipseonly, aes(x = hour, y = sapply(ADI_all,sum)), col = "blue", lwd =1)+
  theme_minimal()+
  labs(title = "Acoustic Diversity Index over the Duration of the Eclipse", y = "ADI")
```

Lastly looking at the ADI across this folder we can see that there is potentially a decrease at the point of totality. This suggests perhaps we should continue to look into this index as we expand our data set.

```{r}
#| echo: false
ggplot(data = eclipse_time, aes(x = hour, y = sapply(ADI_all, sum)))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3000, fill = "lightblue", alpha = 0.3)+
  geom_line()+
  facet_wrap(~day)+
  theme_minimal()+
  labs(title = "Acoustic Diversity over the Eclipse Duration", y = "ADI")+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))
```

The difficulty in assessing the plot above is that due to the noise in this index, it is difficult to assess whether this pattern is uncommon across the rest of the days. 

# Full data visualization 

```{r}
#| echo: false

A002_SD013<-readRDS(here("rds_files/A002_SD013.rds"))
A003_SD005<-readRDS(here("rds_files/A003_SD005.rds"))
A004_SD012<-readRDS(here("rds_files/A004_SD012.rds"))
A005_SD002<-readRDS(here("rds_files/A005_SD002.rds"))
A006_SD006<-readRDS(here("rds_files/A006_SD006.rds"))
A007_SD017<-readRDS(here("rds_files/A007_SD017.rds"))
A008_SD007<-readRDS(here("rds_files/A008_SD007.rds"))
A009_SD009<-readRDS(here("rds_files/A009_SD009.rds"))
A010_SD014<-readRDS(here("rds_files/A010_SD014.rds"))
A011_SD018<-readRDS(here("rds_files/A011_SD018.rds"))
A013_SD016<-readRDS(here("rds_files/A013_SD016.rds"))
A014_SD021<-readRDS(here("rds_files/A014_SD021.rds"))
A015_SD010<-readRDS(here("rds_files/A015_SD010.rds"))
A016_SD022<-readRDS(here("rds_files/A016_SD022.rds"))
A017_SD024<-readRDS(here("rds_files/A017_SD024.rds"))
A018_SD011<-readRDS(here("rds_files/A018_SD011.rds"))
A019_SD008<-readRDS(here("rds_files/A019_SD008.rds"))
A021_SD023<-readRDS(here("rds_files/A021_SD023.rds"))
A022_SD019<-readRDS(here("rds_files/A022_SD019.rds"))

fullAudio<-rbind(A001_SD001, A002_SD013, A003_SD005, A004_SD012,A005_SD002, A006_SD006, A007_SD017, A008_SD007, A009_SD009, A010_SD014, A011_SD018, A013_SD016, A014_SD021, A015_SD010, A016_SD022, A017_SD024, A018_SD011, A019_SD008, A021_SD023, A022_SD019)|>
  group_by(folder_name)|>
  mutate(fullACI = sapply(ACI_all,sum))|>
  mutate(fullADI = sapply(ADI_all, sum))|>
  filter(day == "2024-04-06" | day == "2024-04-07"| day == "2024-04-08"| day == "2024-04-09" | day == "2024-04-11")


onlyEclipseTime<-fullAudio|> filter(hour>= eclipse_start & hour<= eclipse_end)
onlyEclipseDAY<-fullAudio|> filter(hour>= eclipse_start & hour<= eclipse_end)|> filter(day == "2024-04-08")

```

Due to concerns about changes in weather, time from eclipse, and to improve readability we utilized a subset of the recording days. To assess the weather conditions across the days we used the website:

<https://www.wunderground.com/history/daily/us/ny/ogdensburg>

from looking at this website across our days of recording we decided to use the 2 days buffering the eclipse, however due to wind gusts around the midday on the 10th we opted for the 11th. This created a subset of days which had similar weather patterns to the day of the eclipse, and were close to April 8th which decreased concern about migratory changes that could alter the soundscape. This created a subset of the days: April 6th, 7th, 8th, 9th, and 11th. 

We approached the full visualization of our data through two avenues: faceting by audiomoth and by day. This allowed us to search for patterns on April 8th across the different recording devices, and then to look specifically at all the data from the 8th and to look for patterns across the rest of our chosen days. In our visualizations which facet by day we used a geom_smooth() layer to display a smoothed Generalized Additive Model line to display patterns more clearly.

## Acoustic Complexity 

```{r}
#| echo: false

ggplot(onlyEclipseTime, aes(x = hour, y = fullACI, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3000, fill = "lightblue", alpha = 0.2)+
  geom_line(alpha = 0.2)+
  geom_line(data = onlyEclipseDAY, aes(x = hour, y= fullACI), col = "blue")+
  facet_wrap(~folder_name)+
  theme_minimal()+
  scale_x_continuous(breaks = c(hms(0,00,14),hms(00,00,15), hms(00,00,16)))+
  scale_y_continuous(limits = c(1500,1900))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))+
  labs(title = "Acoustic Complexity Over All AudioMoths")
  

ggplot(data = onlyEclipseTime, aes(x = hour, y = fullACI)) +
  geom_line(aes(group = folder_name), alpha = 0.4) +
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3000, fill = "lightblue", alpha = 0.2) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(~ day)+
  labs(title = "Acoustic Complexity Across Days")

```

We can see in both of these graphs that there is not likely to be a significant pattern in this index. From the facetting graph by recording device we can see there is not a lot of change happening during the time of totality, or across the full recording period for the day of the eclipse. In our second graph, we can see a majority of the days have a pretty linear smoothing curve, and this signals that the eclipse on April 8th likely did not have any influence on Acoustic Complexity.

## Acoustic Diversity 

```{r}
#| echo: false

ggplot(onlyEclipseTime, aes(x = hour, y = fullADI, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 12, fill = "lightblue", alpha = 0.2)+
  geom_line(alpha = 0.2)+
  geom_line(data = onlyEclipseDAY, aes(x = hour, y= fullADI), col = "blue")+
  facet_wrap(~folder_name)+
  theme_minimal()+
  scale_x_continuous(breaks = c(hms(0,00,14),hms(00,00,15), hms(00,00,16)))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))+
  labs(title = "Acoustic Diversity Over All AudioMoths")
  
ggplot(data = onlyEclipseTime, aes(x = hour, y = fullADI)) +
  geom_line(aes(group = folder_name), alpha = 0.4) +
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 10, fill = "lightblue", alpha = 0.2) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(~ day)+
  labs(title = "Acoustic Diversity Across Days")
```

Looking at our first graph, we can potentially see some sharp decreases around the time of totality from April 8th, and the appearance of higher results corresponding to other days potentially shows that the eclipse could have some influence. When we look at our visual facetted by day, we can see a majority of the days have very flat smoothing curves, yet on April 8th there seems to be 2 peaks close to the time of totality. This signals that this index could be  influenced by the eclipse. 

## Acoustic Evenness 

```{r}
#| echo: false

ggplot(onlyEclipseTime, aes(x = hour, y = aei, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.2)+
  geom_line(alpha = 0.2)+
  geom_line(data = onlyEclipseDAY, aes(x = hour, y= aei), col = "blue")+
  facet_wrap(~folder_name)+
  theme_minimal()+
  scale_x_continuous(breaks = c(hms(0,00,14),hms(00,00,15), hms(00,00,16)))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))+
  labs(title = "Acoustic Evenness Over All AudioMoths")

ggplot(data = onlyEclipseTime, aes(x = hour, y = aei)) +
  geom_line(aes(group = folder_name), alpha = 0.4) +
  geom_smooth() +
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.2) +
  theme_minimal() +
  facet_wrap(~ day)+
  labs(title = "Acoustic Evenness Across Days")
```

Looking at the graph across recording device, it is very difficult to see any sort of interesting pattern due to the variation across the recording devices. When we display the data by day, we can see that about a third of the days have flat smoothing curves, however some of the days seem to have a dip or increase in the smoothing curve around the time corresponding to totality. This mix of results makes it hard for us to conclude from this visual whether the eclipse did influence Acoustic evenness or not. 

## Bioacoustic Index 

```{r}
#| echo: false

ggplot(onlyEclipseTime, aes(x = hour, y = bei, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.2)+
  geom_line(alpha = 0.2)+
  geom_line(data = onlyEclipseDAY, aes(x = hour, y= bei), col = "blue")+
  facet_wrap(~folder_name)+
  labs(title = "Bioacoustic index Across All Audiomoths")+
  theme_minimal()+
  scale_x_continuous(breaks = c(hms(0,00,14),hms(00,00,15), hms(00,00,16)))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))

ggplot(data = onlyEclipseTime, aes(x = hour, y = bei)) +
  geom_line(aes(group = folder_name), alpha = 0.4) +
  geom_smooth() +
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.2) +
  labs(title = "Bioacoustic index Across Days")+
  theme_minimal() +
  facet_wrap(~ day)

```

In this index we can see some interesting patterns. Looking across audiomoth it is harder to see, but there is potentially a pattern where the index increases around the time of totality. When we then facet by day we can see a very striking pattern, where the only increase seen across all the days occurs on April 8th around the time of totality. 

## Biophony

```{r}
#| echo: false

ggplot(onlyEclipseTime, aes(x = hour, y = biophony, group = day))+
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 3, fill = "lightblue", alpha = 0.2)+
  geom_line(alpha = 0.2)+
  geom_line(data = onlyEclipseDAY, aes(x = hour, y= biophony), col = "blue")+
  facet_wrap(~folder_name)+
  theme_minimal()+
  labs(title = " Biophony Across All Audiomoths")+
  scale_x_continuous(breaks = c(hms(0,00,14),hms(00,00,15), hms(00,00,16)))+
  theme(axis.text.x = element_text(angle = 45, vjust= 0.5))

ggplot(data = onlyEclipseTime, aes(x = hour, y = biophony)) +
  geom_line(aes(group = folder_name), alpha = 0.4) +
  geom_rect(xmin =  hms(52,23,15), xmax = hms(05,27,15), ymin = 0, ymax = 10, fill = "lightblue", alpha = 0.2) +
  geom_smooth() +
  labs(title = " Biophony Across Days")+
  theme_minimal() +
  facet_wrap(~ day)
```

Interestingly for biophony when we look at the patterns across recording device it seems like there could be some interesting patterns happening for a majority of the days, with either some increases or decreases around the time of totality. However, when we look at the smoothing curves across the days we can see that the majority of the days including April 8th are quite flat, overall suggesting that the eclipse is not influencing this index. 

From these full data exploratory plots, 

WHAT WE CONCLUDE FROM THESE GRAPHICS 

# Modeling

\*  Generalized Additive Modeling

```{r}
#| echo: false
modelEclipse_df<-fullAudio|> mutate(eclipse = ifelse(day == "2024-04-08", 
                                                     "eclipse", 
                                                     "not_eclipse"))|>
  mutate(eclipse = as_factor(eclipse))|>
  mutate(hour_numeric = as.numeric(hour))|>
  filter(hour>= eclipse_start & hour<= eclipse_end &
           day %in% c("2024-04-06", "2024-04-07", "2024-04-08",
                    "2024-04-09", "2024-04-11"))|>
  mutate(day_factor = as.factor(day), folder_name = as_factor(folder_name))|>
  select(hour, hour_numeric, everything())

modelBeforeEclipse_df<- fullAudio|> mutate(eclipse = ifelse(day == "2024-04-08", 
                                                            "eclipse", 
                                                            "not_eclipse"))|>
  mutate(eclipse = as_factor(eclipse), folder_name = as_factor(folder_name))|>
  mutate(hour_numeric = as.numeric(hour))|>
  filter(hour < eclipse_start & day %in% c("2024-04-06", "2024-04-07", "2024-04-08",
                   "2024-04-09", "2024-04-11")) |>
  mutate(day_factor = as.factor(day))


partial_begin = tibble(bei = (3.5), biophony = (2.5), fullACI = (1950), 
                       fullADI = (9), aei = (0.7), hour_numeric = hms(38,11,14))
second_df = tibble(bei = (3.5), biophony = (2.5), fullACI = (1950),
                   fullADI = (9), aei = (0.7), hour_numeric = hms(00,45,14))
totality = tibble(bei = (3.5), biophony = (2.5), fullACI = (1950),
                  fullADI = (9), aei = (0.7),  hour_numeric = hms(52,23,15))
fourth_df = tibble(bei = (3.5), biophony = (2.5), fullACI = (1950), 
                   fullADI = (9), aei = (0.7), hour_numeric = hms(00,00,16))
partial_end = tibble(bei = (3.5), biophony = (2.5), fullACI = (1950),
                     fullADI = (9), aei = (0.7), hour_numeric = hms(38,35,16))

```

To model this data we decided to use Generalized additive models so we could incorporate non-linear patterns that we were seeing while still maintaining additivity between the variables. A GAM model resembles linear regression, but replaces the linear components with smooth non-linear functions: 

$$ y_i = \beta_0 + f_1(x_{i1}) + f_2(x_{i2}) + f_3(x_{i3})+...+ f_p(x_{ip}) + \epsilon_i$$
\* Smoothing Splines

Include explanation behind splines and brief intro to how they are calculated

Utilizing a smoothing spline can help us capture non-linear patterns which are present in the model. A smoothing spline specifies a function g(x) such that minimizes the formula below. The function g(x) is known to be a differentiable cubic polynomial function at knots for each training observation $x_i$.

$$ \Sigma_{i=1}^n  (y_i - g(x_i))^2 + \lambda \int g^{''}t^2  dt$$
This formula is similar to the idea of minimizing the residual sum of squares which can be seen in the first portion of the formula, but is also specifies a shrinking parameter lambda, which will penalize the variability of our function g(x) and will control the "wiggliness" of the curve. In other words, the second portion of the above formula which is tuned by $\lambda$ influences the effective degrees of freedom which will appear in our model summaries, and this can then be used as an assessment of the flexibility in the curves. From the s() function of the mgcv package that is used to create a smoothing spline, this $\lambda$ is optimized using generalized cross-validation. 

\* Final Models 

Our final generalized additive models were made using a smoothing spline for hour separated by day, an additional smoothing spline for folder_name which would help us account for the different audiomoths and their respective locations, and lastly a linear function of day. To create these models we used the gam() function from the mgcv packages, and to create our visualization we used the data_grid() function (from mgcv) as well as the augment() function from the broom package. This allowed us to create predicted values based on our model and to then visualize them alongside our GAMs. To produce these visuals we also needed to specify a specific audiomoth which lied around the "center" of our observed index values. A table of these audiomoths and the indices that they were used for is below: 

| Index         | AudioMoth        |
|---------------|--------------------------------------------------|
| ACI  | A017_SD024                    |
| ADI | A016_SD022 |
| AEI | A16_SD022             |
| BEI | A014_SD021                       |
| Biophony | A001_SD001  | 

:  {.striped .hover}

## Bioacoustic Index 

```{r}
#| echo: false
bei_mod<- mgcv::gam(bei~ s(hour_numeric, by = day_factor)+
                      day_factor + s(folder_name, bs = "re"),
                    data = modelEclipse_df)

summary(bei_mod)
broom::tidy(bei_mod)

#deviance explained
1 - (bei_mod$deviance/bei_mod$null.deviance)
```

From our model output we can see from the F-values and p-values that our smoothing splines are extremely significant in the model. From looking at the estimated degrees of freedom for the smooth terms we can see that April 8th possesses an extremely complex line line with an edf of 8.861. The other days vary in their complexity but we can see that they all do have non-linear effects with April 7th being the second most flexible after April 8th, with an edf of 7.464. 

We can also note from this output that the model has a explained deviance value of 44%, meaning that using our smoothing spline and day variable explains 44% of the variability in the bioacoustic index.

```{r}
#| echo: false
grid <- modelEclipse_df |> 
  ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A014_SD021",
    day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(bei_mod, newdata = grid)



# visual across the time of eclipse
ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelEclipse_df, aes(y = bei, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor), linewidth = 2) +
  geom_point(data = totality, aes(x = hour_numeric, y = bei), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = bei), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = bei), size = 4, col = "white")+
  geom_point(x = hms(00,10,14), y = 3.5, size = 2)+
  geom_point(data = second_df, aes(x = hour_numeric, y = bei), pch = 15, size = 6)+
  geom_point(data = second_df, aes(x = hour_numeric, y = bei), size = 4, col = "white")+
  geom_point(x = hms(00,44,14), y = 3.5, size = 3)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = bei), pch = 15, size = 6)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = bei), size = 4, col = "white")+
  geom_point(x = hms(00,01,16), y = 3.5, size = 3)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = bei),pch = 15 , size = 6)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = bei), size = 4, col = "white")+
  geom_point(x = hms(00,37,16), y = 3.5, size = 2)+
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Bioacoustic Index")+
  scale_x_continuous(name = "Time", breaks = c(eclipse_start, hms(00,00,15), hms(00,00,16), eclipse_end))


```

When we visualize the days like above we can see the flexibility on April 8th. We can see a very high peak which does not appear in any of the other days, with the other days possessing some flexibility as we expected with no major maximums or minimums. Here we can see how the flexibility in the Bioacoustic index on the 8th and how that compares to the rigidity of the other days. 

To expand our understanding of the relationships in this model we created the same GAM on the time from the dawn. 

```{r}
#| echo: false
bei_mod2<- mgcv::gam(bei~ s(hour_numeric, by = day_factor)+
                      day_factor + s(folder_name, bs = "re")
                    , data = modelBeforeEclipse_df)
summary(bei_mod2)
```

Using this model we can see that a majority of the splines are still significant, however the only non-significant term is actually occurring on the 8th. In this summary we can also see based on the edf value of one that the 8th is actually linear during this time period. This helps us understand that there was not any special pattern that occurred on the 8th and provides evidence that it was a normal day. 

We can also see that this model has an explained deviance value of 56.7%, meaning that this model explains 56.7% of the variability in the bioacoustic index during this time frame. 

```{r}
#| echo: false
grid <- modelBeforeEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "A014_SD021",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(bei_mod2, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelBeforeEclipse_df, aes(y = bei, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "bei")+
  scale_x_continuous(name = "Time", breaks = c(hms(00,45,5), hms(00,15,6), hms(00,45,6),hms(00,15,7)))

```

Looking at this graph we can see that there is nothing setting any of the days apart, and like what we found in the summary we can see there is no special pattern occurring in the morning on the 8th, and that the bioacoustic index on this day is quite similar to the patterns that occurred on our subset of other days. 


## Acoustic Evenness 

```{r}
#| echo: false
aei_mod<- mgcv::gam(aei~ s(hour_numeric, by = day_factor)+
                      day_factor + s(folder_name, bs = "re")
                    , data = modelEclipse_df)
summary(aei_mod)
```

For this model, we can see  there is significance from our predictors for most of the days (with a non-significant p-value for april 11th) and looking at the edf values we can see that the 8th is again the most flexible day with an edf of 8.683. 

We can also see from this model that about 30.3% of the variability in acoustic evenness is explained by this model.

```{r}
#| echo: false
grid <- modelEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A016_SD022",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(aei_mod, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelEclipse_df, aes(y = aei, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  geom_point(data = totality, aes(x = hour_numeric, y = aei), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = aei), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = aei), size = 4, col = "white")+
  geom_point(x = hms(00,10,14), y = 0.7, size = 2)+
  geom_point(data = second_df, aes(x = hour_numeric, y = aei), pch = 15, size = 6)+
  geom_point(data = second_df, aes(x = hour_numeric, y = aei), size = 4, col = "white")+
  geom_point(x = hms(00,44,14), y = 0.7, size = 3)+
  geom_point(data = fourth_df, aes(x=hour_numeric, y = aei), pch = 15, size = 6)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = aei), size = 4, col = "white")+
  geom_point(x = hms(00,01,16), y = 0.7, size = 3)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = aei),pch = 15 , size = 6)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = aei), size = 4, col = "white")+
  geom_point(x = hms(00,37,16), y = 0.7, size = 2)+
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Acoustic Evenness")
```

Looking at this visualization we note that April 8th possesses a very flexible line, with some minimums surrounding the time of totality. The other lines, although flexible do not possess the same non-linearity which is what we denoted from the model summary. 

```{r}
#| echo: false
aei_mod2<- mgcv::gam(aei~ s(hour_numeric, by = day_factor)+
                       day_factor + s(folder_name, bs = "re")
                     , data = modelBeforeEclipse_df)
summary(aei_mod2)
```

After creating a model for the time corresponding to dawn we can see that majority for the days are not extremely significant in this model, and April 8th is almost linear with a edf value of 1.744. We also see the deviance explained value decrease to 26%, showing that 26% of the variability in Acoustic eveness is explained by this dawn model. 

```{r}
#| echo: false
grid <- modelBeforeEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A016_SD021",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(aei_mod2, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelBeforeEclipse_df, aes(y = aei, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Acoustic Eveness Index")+
  scale_x_continuous(name = "Time", breaks = c(hms(00,45,5), hms(00,15,6), hms(00,45,6),hms(00,15,7)))

```

Like bioacoustic evenness this plot above shows that April 8th is not a day out of the ordinary, and we can see the lack of flexibility in the majority of these lines. 

## Acoustic Complexity

```{r}
#| echo: false
ACI_mod<- mgcv::gam(fullACI~ s(hour_numeric, by = day_factor)+
                      day_factor+ s(folder_name, bs = "re")
                    , data = modelEclipse_df)
summary(ACI_mod)
```

From this model summary we can see that all of the smoothing terms are significant in this model, and on April 8th the line is pretty complex with an effective degrees of freedom of 7.497. This is not the most flexible day from this model however, as April 11th has a higher edf value of 8.748. This could suggest that although the data from April 8th possesses a non-liner effect, it may not due to the eclipse but potentially to other factors. Looking at a visualization for this metric will provide valuable insight to the patterns across the time of the eclipse. 

This model also expresses that 34.9% of the deviance in Acoustic complexity is explained. 

```{r}
#| echo: false
grid <- modelEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A017_SD024",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(ACI_mod, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelEclipse_df, aes(y = fullACI, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  geom_point(data = totality, aes(x = hour_numeric, y = fullACI), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = fullACI), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = fullACI), size = 4, col = "white")+
  geom_point(x = hms(00,10,14), y = 1950, size = 2)+
  geom_point(data = second_df, aes(x = hour_numeric, y = fullACI), pch = 15, size = 6)+
  geom_point(data = second_df, aes(x = hour_numeric, y = fullACI), size = 4, col = "white")+
  geom_point(x = hms(00,44,14), y = 1950, size = 3)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = fullACI), pch = 15, size = 6)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = fullACI), size = 4, col = "white")+
  geom_point(x = hms(00,01,16), y = 1950, size = 3)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = fullACI),pch = 15 , size = 6)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = fullACI), size = 4, col = "white")+
  geom_point(x = hms(00,37,16), y = 1950, size = 2)+
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Acoustic Complexity")+
  scale_x_continuous(name = "Time", breaks = c(eclipse_start, hms(00,00,15), hms(00,00,16), eclipse_end))

```

In this plot we can confirm that April 8th really does not show any patterns around the time of the eclipse, and we can also see the extreme similarities between the majority of the lines. This shows us that although we observed those non-linear patterns this was likely not due to the eclipse. 

Should we add a model from the dawn for non-significant models as well? 

## Acoustic Diversity

```{r}
#| echo: false
ADI_mod<- mgcv::gam(fullADI~ s(hour_numeric, by = day_factor)+
                      day_factor + s(folder_name, bs = "re")
                    , data = modelEclipse_df)
summary(ADI_mod)
```

For Acoustic diversity, the model summary is showing significance in our splines across all of the days, and we can see that April 8th is the most flexible with an edf of 8.454. Second to that however is April 11th with a pretty close edf value of 7.369. 

We note that  about 31.5% of the variability in Acoustic diversity is explained by this model. 

```{r}
#| echo: false
grid <- modelEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A016_SD022",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(ADI_mod, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelEclipse_df, aes(y = fullADI, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  geom_point(data = totality, aes(x = hour_numeric, y = fullADI), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = fullADI), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = fullADI), size = 4, col = "white")+
  geom_point(x = hms(00,10,14), y = 9, size = 2)+
  geom_point(data = second_df, aes(x = hour_numeric, y = fullADI), pch = 15, size = 6)+
  geom_point(data = second_df, aes(x = hour_numeric, y = fullADI), size = 4, col = "white")+
  geom_point(x = hms(00,44,14), y = 9, size = 3)+
  geom_point(data = fourth_df, aes(x=hour_numeric, y = fullADI), pch = 15, size = 6)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = fullADI), size = 4, col = "white")+
  geom_point(x = hms(00,01,16), y = 9, size = 3)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = fullADI),pch = 15 , size = 6)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = fullADI), size = 4, col = "white")+
  geom_point(x = hms(00,37,16), y = 9, size = 2)+
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Acoustic Diversity ")+
  scale_x_continuous(name = "Time", breaks = c(eclipse_start, hms(00,00,15), hms(00,00,16), eclipse_end))
```

As we noted we can see the flexibility in bith April 8th and April 11th, with the other lines not showing as much non-linearity. Although the 8th and 11th have comparable levels of non-linearity we can see that April 8th changes more over this time period, with a pretty drastic overall increase across the time of the eclipse. 


```{r}
#| echo: false
ADI_mod2<- mgcv::gam(fullADI~ s(hour_numeric, by = day_factor)+
                       day_factor + s(folder_name, bs = "re")
                     , data = modelBeforeEclipse_df)
summary(ADI_mod2)
```

Akin to the other models, we can see that April 8th is presenting linear effects during the dawn, with an edf of 1.514. April 11th has a close edf value in this secondary model, but the rest of the days are much more complex. We can also see that April 8th is the only day where our spline term is not showing significance.

In this model, the variability explained in Acoustic diversity has decreased to 29.1%

```{r}
#| echo: false
grid <- modelBeforeEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A016_SD021",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(ADI_mod2, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelBeforeEclipse_df, aes(y = fullADI, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Acoustic Diversity Index")+
  scale_x_continuous(name = "Time", breaks = c(hms(00,45,5), hms(00,15,6), hms(00,45,6),hms(00,15,7)))


```

We can visualize that flexibility in the other days in this visualization above, but the main takeaway is that April 8th doesn't show any distinct pattern or difference from other days. This shows us that it is a regular day, and it highlights the difference in patterns during the time of the eclipse. 

## Biophony

```{r}
#| echo: false
biophony_mod<- mgcv::gam(biophony~ s(hour_numeric, by = day_factor)+
                      day_factor + s(folder_name, bs = "re")
                    , data = modelEclipse_df)
summary(biophony_mod)
```

Lastly, in our biophony model we can see that here the 8th has an edf value of 6.558 which shows that there is some non-linearity. We can see that two of the other days (April 6th and 7th) are more complex than this line, which suggests that the non-linearity may not be due to the changes during the eclipse. Like Acoustic complexity, a visualization will help us discern whether we should stick with this assumption. 

In this model 62.5% of the variability in biophony is explained by our model. 

```{r}
#| echo: false
grid <- modelEclipse_df |> ungroup() |>
  data_grid(hour_numeric = seq_range(hour_numeric, n = 40), folder_name = "/A001_SD001",
            day_factor = modelEclipse_df |> pull(day_factor) |> levels()
  )

gam_aug <- broom::augment(biophony_mod, newdata = grid)

ggplot(data = gam_aug, aes(x = hour_numeric, y = .fitted)) +
  geom_point(data = modelEclipse_df, aes(y = biophony, colour = day_factor), alpha = 0.1) +
  geom_line(aes(colour = day_factor),
            linewidth = 2) +
  geom_point(data = totality, aes(x = hour_numeric, y = biophony), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = biophony), pch = 15, size = 6)+
  geom_point(data = partial_begin, aes(x = hour_numeric, y = biophony), size = 4, col = "white")+
  geom_point(x = hms(00,10,14), y = 2.5, size = 2)+
  geom_point(data = second_df, aes(x = hour_numeric, y = biophony), pch = 15, size = 6)+
  geom_point(data = second_df, aes(x = hour_numeric, y = biophony), size = 4, col = "white")+
  geom_point(x = hms(00,44,14), y = 2.5, size = 3)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = biophony), pch = 15, size = 6)+
  geom_point(data = fourth_df, aes(x = hour_numeric, y = biophony), size = 4, col = "white")+
  geom_point(x = hms(00,01,16), y = 2.5, size = 3)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = biophony),pch = 15 , size = 6)+
  geom_point(data = partial_end, aes(x = hour_numeric, y = biophony), size = 4, col = "white")+
  geom_point(x = hms(00,37,16), y = 2.5, size = 2)+
  scale_colour_viridis_d() +
  theme_minimal() +
  labs(colour = "eclipse_or_not",
       y = "Biophony")

```

This visualization shows very clearly that all of the days during this time frame are very similar, and we don't see any particular patterns from April 8th or any other day. This suggests that biophony was not impacted during the time of the eclipse. 

# Conclusion

# Citations 

Packages 

Gerber, J. E., Howard, D., & Quinn, J. E. (2020). Soundscape shifts during the 2017 total solar eclipse: An application of dispersed automated recording units to study ephemeral acoustic events. Biodiversity, 21(1), 41–47. https://doi.org/10.1080/14888386.2020.1715834 

Intro to Statistical Machine learning 

